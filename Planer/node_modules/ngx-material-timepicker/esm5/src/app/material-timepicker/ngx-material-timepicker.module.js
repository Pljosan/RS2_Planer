/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgxMaterialTimepickerComponent } from './ngx-material-timepicker.component';
import { StyleSanitizerPipe } from './pipes/style-sanitizer.pipe';
import { NgxMaterialTimepickerMinutesFaceComponent } from './components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component';
import { NgxMaterialTimepickerService } from './services/ngx-material-timepicker.service';
import { NgxMaterialTimepickerFaceComponent } from './components/timepicker-face/ngx-material-timepicker-face.component';
import { TimeFormatterPipe } from './pipes/time-formatter.pipe';
import { NgxMaterialTimepickerButtonComponent } from './components/timepicker-button/ngx-material-timepicker-button.component';
import { TimepickerDirective } from './directives/ngx-timepicker.directive';
import { OverlayDirective } from './directives/overlay.directive';
import { NgxMaterialTimepickerEventService } from './services/ngx-material-timepicker-event.service';
import { NgxMaterialTimepickerToggleComponent } from './components/timepicker-toggle-button/ngx-material-timepicker-toggle.component';
import { NgxMaterialTimepickerToggleIconDirective } from './directives/ngx-material-timepicker-toggle-icon.directive';
import { NgxMaterialTimepicker12HoursFaceComponent } from './components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component';
import { NgxMaterialTimepicker24HoursFaceComponent } from './components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component';
import { FormsModule } from '@angular/forms';
import { NgxMaterialTimepickerDialComponent } from './components/timepicker-dial/ngx-material-timepicker-dial.component';
import { NgxMaterialTimepickerDialControlComponent } from './components/timepicker-dial-control/ngx-material-timepicker-dial-control.component';
import { MinutesFormatterPipe } from './pipes/minutes-formatter.pipe';
import { NgxMaterialTimepickerPeriodComponent } from './components/timepicker-period/ngx-material-timepicker-period.component';
import { AutofocusDirective } from './directives/autofocus.directive';
var NgxMaterialTimepickerModule = /** @class */ (function () {
    function NgxMaterialTimepickerModule() {
    }
    /**
     * @return {?}
     */
    NgxMaterialTimepickerModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: NgxMaterialTimepickerModule,
            providers: [NgxMaterialTimepickerService, NgxMaterialTimepickerEventService]
        };
    };
    NgxMaterialTimepickerModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule
                    ],
                    exports: [
                        NgxMaterialTimepickerComponent,
                        NgxMaterialTimepickerToggleComponent,
                        TimepickerDirective,
                        NgxMaterialTimepickerToggleIconDirective
                    ],
                    declarations: [
                        NgxMaterialTimepickerComponent,
                        NgxMaterialTimepicker24HoursFaceComponent,
                        NgxMaterialTimepicker12HoursFaceComponent,
                        NgxMaterialTimepickerMinutesFaceComponent,
                        NgxMaterialTimepickerFaceComponent,
                        NgxMaterialTimepickerToggleComponent,
                        NgxMaterialTimepickerButtonComponent,
                        NgxMaterialTimepickerDialComponent,
                        NgxMaterialTimepickerDialControlComponent,
                        NgxMaterialTimepickerPeriodComponent,
                        StyleSanitizerPipe,
                        TimeFormatterPipe,
                        TimepickerDirective,
                        OverlayDirective,
                        NgxMaterialTimepickerToggleIconDirective,
                        AutofocusDirective,
                        MinutesFormatterPipe
                    ]
                },] }
    ];
    return NgxMaterialTimepickerModule;
}());
export { NgxMaterialTimepickerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdGVyaWFsLXRpbWVwaWNrZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW1hdGVyaWFsLXRpbWVwaWNrZXIvIiwic291cmNlcyI6WyJzcmMvYXBwL21hdGVyaWFsLXRpbWVwaWNrZXIvbmd4LW1hdGVyaWFsLXRpbWVwaWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQXNCLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFDLDhCQUE4QixFQUFDLE1BQU0scUNBQXFDLENBQUM7QUFDbkYsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFDaEUsT0FBTyxFQUFDLHlDQUF5QyxFQUFDLE1BQU0scUZBQXFGLENBQUM7QUFDOUksT0FBTyxFQUFDLDRCQUE0QixFQUFDLE1BQU0sNENBQTRDLENBQUM7QUFDeEYsT0FBTyxFQUFDLGtDQUFrQyxFQUFDLE1BQU0scUVBQXFFLENBQUM7QUFDdkgsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFDOUQsT0FBTyxFQUFDLG9DQUFvQyxFQUFDLE1BQU0seUVBQXlFLENBQUM7QUFDN0gsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFDMUUsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFDaEUsT0FBTyxFQUFDLGlDQUFpQyxFQUFDLE1BQU0sa0RBQWtELENBQUM7QUFDbkcsT0FBTyxFQUFDLG9DQUFvQyxFQUFDLE1BQU0sZ0ZBQWdGLENBQUM7QUFDcEksT0FBTyxFQUFDLHdDQUF3QyxFQUFDLE1BQU0sNERBQTRELENBQUM7QUFDcEgsT0FBTyxFQUFDLHlDQUF5QyxFQUFDLE1BQU0sdUZBQXVGLENBQUM7QUFDaEosT0FBTyxFQUFDLHlDQUF5QyxFQUFDLE1BQU0sdUZBQXVGLENBQUM7QUFDaEosT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxrQ0FBa0MsRUFBQyxNQUFNLHFFQUFxRSxDQUFDO0FBQ3ZILE9BQU8sRUFBQyx5Q0FBeUMsRUFBQyxNQUFNLHFGQUFxRixDQUFDO0FBQzlJLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLGdDQUFnQyxDQUFDO0FBQ3BFLE9BQU8sRUFBQyxvQ0FBb0MsRUFBQyxNQUFNLHlFQUF5RSxDQUFDO0FBQzdILE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBRXBFO0lBQUE7SUFzQ0EsQ0FBQzs7OztJQU5VLG1DQUFPOzs7SUFBZDtRQUNJLE9BQU87WUFDSCxRQUFRLEVBQUUsMkJBQTJCO1lBQ3JDLFNBQVMsRUFBRSxDQUFDLDRCQUE0QixFQUFFLGlDQUFpQyxDQUFDO1NBQy9FLENBQUM7SUFDTixDQUFDOztnQkFyQ0osUUFBUSxTQUFDO29CQUNOLE9BQU8sRUFBRTt3QkFDTCxZQUFZO3dCQUNaLFdBQVc7cUJBQ2Q7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLDhCQUE4Qjt3QkFDOUIsb0NBQW9DO3dCQUNwQyxtQkFBbUI7d0JBQ25CLHdDQUF3QztxQkFDM0M7b0JBQ0QsWUFBWSxFQUFFO3dCQUNWLDhCQUE4Qjt3QkFDOUIseUNBQXlDO3dCQUN6Qyx5Q0FBeUM7d0JBQ3pDLHlDQUF5Qzt3QkFDekMsa0NBQWtDO3dCQUNsQyxvQ0FBb0M7d0JBQ3BDLG9DQUFvQzt3QkFDcEMsa0NBQWtDO3dCQUNsQyx5Q0FBeUM7d0JBQ3pDLG9DQUFvQzt3QkFDcEMsa0JBQWtCO3dCQUNsQixpQkFBaUI7d0JBQ2pCLG1CQUFtQjt3QkFDbkIsZ0JBQWdCO3dCQUNoQix3Q0FBd0M7d0JBQ3hDLGtCQUFrQjt3QkFDbEIsb0JBQW9CO3FCQUN2QjtpQkFDSjs7SUFRRCxrQ0FBQztDQUFBLEFBdENELElBc0NDO1NBUFksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQge05neE1hdGVyaWFsVGltZXBpY2tlckNvbXBvbmVudH0gZnJvbSAnLi9uZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci5jb21wb25lbnQnO1xyXG5pbXBvcnQge1N0eWxlU2FuaXRpemVyUGlwZX0gZnJvbSAnLi9waXBlcy9zdHlsZS1zYW5pdGl6ZXIucGlwZSc7XHJcbmltcG9ydCB7Tmd4TWF0ZXJpYWxUaW1lcGlja2VyTWludXRlc0ZhY2VDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50cy90aW1lcGlja2VyLW1pbnV0ZXMtZmFjZS9uZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1taW51dGVzLWZhY2UuY29tcG9uZW50JztcclxuaW1wb3J0IHtOZ3hNYXRlcmlhbFRpbWVwaWNrZXJTZXJ2aWNlfSBmcm9tICcuL3NlcnZpY2VzL25neC1tYXRlcmlhbC10aW1lcGlja2VyLnNlcnZpY2UnO1xyXG5pbXBvcnQge05neE1hdGVyaWFsVGltZXBpY2tlckZhY2VDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50cy90aW1lcGlja2VyLWZhY2Uvbmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItZmFjZS5jb21wb25lbnQnO1xyXG5pbXBvcnQge1RpbWVGb3JtYXR0ZXJQaXBlfSBmcm9tICcuL3BpcGVzL3RpbWUtZm9ybWF0dGVyLnBpcGUnO1xyXG5pbXBvcnQge05neE1hdGVyaWFsVGltZXBpY2tlckJ1dHRvbkNvbXBvbmVudH0gZnJvbSAnLi9jb21wb25lbnRzL3RpbWVwaWNrZXItYnV0dG9uL25neC1tYXRlcmlhbC10aW1lcGlja2VyLWJ1dHRvbi5jb21wb25lbnQnO1xyXG5pbXBvcnQge1RpbWVwaWNrZXJEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy9uZ3gtdGltZXBpY2tlci5kaXJlY3RpdmUnO1xyXG5pbXBvcnQge092ZXJsYXlEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy9vdmVybGF5LmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7Tmd4TWF0ZXJpYWxUaW1lcGlja2VyRXZlbnRTZXJ2aWNlfSBmcm9tICcuL3NlcnZpY2VzL25neC1tYXRlcmlhbC10aW1lcGlja2VyLWV2ZW50LnNlcnZpY2UnO1xyXG5pbXBvcnQge05neE1hdGVyaWFsVGltZXBpY2tlclRvZ2dsZUNvbXBvbmVudH0gZnJvbSAnLi9jb21wb25lbnRzL3RpbWVwaWNrZXItdG9nZ2xlLWJ1dHRvbi9uZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci10b2dnbGUuY29tcG9uZW50JztcclxuaW1wb3J0IHtOZ3hNYXRlcmlhbFRpbWVwaWNrZXJUb2dnbGVJY29uRGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvbmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItdG9nZ2xlLWljb24uZGlyZWN0aXZlJztcclxuaW1wb3J0IHtOZ3hNYXRlcmlhbFRpbWVwaWNrZXIxMkhvdXJzRmFjZUNvbXBvbmVudH0gZnJvbSAnLi9jb21wb25lbnRzL3RpbWVwaWNrZXItMTItaG91cnMtZmFjZS9uZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci0xMi1ob3Vycy1mYWNlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7Tmd4TWF0ZXJpYWxUaW1lcGlja2VyMjRIb3Vyc0ZhY2VDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50cy90aW1lcGlja2VyLTI0LWhvdXJzLWZhY2Uvbmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItMjQtaG91cnMtZmFjZS5jb21wb25lbnQnO1xyXG5pbXBvcnQge0Zvcm1zTW9kdWxlfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7Tmd4TWF0ZXJpYWxUaW1lcGlja2VyRGlhbENvbXBvbmVudH0gZnJvbSAnLi9jb21wb25lbnRzL3RpbWVwaWNrZXItZGlhbC9uZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1kaWFsLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7Tmd4TWF0ZXJpYWxUaW1lcGlja2VyRGlhbENvbnRyb2xDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50cy90aW1lcGlja2VyLWRpYWwtY29udHJvbC9uZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1kaWFsLWNvbnRyb2wuY29tcG9uZW50JztcclxuaW1wb3J0IHtNaW51dGVzRm9ybWF0dGVyUGlwZX0gZnJvbSAnLi9waXBlcy9taW51dGVzLWZvcm1hdHRlci5waXBlJztcclxuaW1wb3J0IHtOZ3hNYXRlcmlhbFRpbWVwaWNrZXJQZXJpb2RDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50cy90aW1lcGlja2VyLXBlcmlvZC9uZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1wZXJpb2QuY29tcG9uZW50JztcclxuaW1wb3J0IHtBdXRvZm9jdXNEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy9hdXRvZm9jdXMuZGlyZWN0aXZlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIE5neE1hdGVyaWFsVGltZXBpY2tlckNvbXBvbmVudCxcclxuICAgICAgICBOZ3hNYXRlcmlhbFRpbWVwaWNrZXJUb2dnbGVDb21wb25lbnQsXHJcbiAgICAgICAgVGltZXBpY2tlckRpcmVjdGl2ZSxcclxuICAgICAgICBOZ3hNYXRlcmlhbFRpbWVwaWNrZXJUb2dnbGVJY29uRGlyZWN0aXZlXHJcbiAgICBdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgTmd4TWF0ZXJpYWxUaW1lcGlja2VyQ29tcG9uZW50LFxyXG4gICAgICAgIE5neE1hdGVyaWFsVGltZXBpY2tlcjI0SG91cnNGYWNlQ29tcG9uZW50LFxyXG4gICAgICAgIE5neE1hdGVyaWFsVGltZXBpY2tlcjEySG91cnNGYWNlQ29tcG9uZW50LFxyXG4gICAgICAgIE5neE1hdGVyaWFsVGltZXBpY2tlck1pbnV0ZXNGYWNlQ29tcG9uZW50LFxyXG4gICAgICAgIE5neE1hdGVyaWFsVGltZXBpY2tlckZhY2VDb21wb25lbnQsXHJcbiAgICAgICAgTmd4TWF0ZXJpYWxUaW1lcGlja2VyVG9nZ2xlQ29tcG9uZW50LFxyXG4gICAgICAgIE5neE1hdGVyaWFsVGltZXBpY2tlckJ1dHRvbkNvbXBvbmVudCxcclxuICAgICAgICBOZ3hNYXRlcmlhbFRpbWVwaWNrZXJEaWFsQ29tcG9uZW50LFxyXG4gICAgICAgIE5neE1hdGVyaWFsVGltZXBpY2tlckRpYWxDb250cm9sQ29tcG9uZW50LFxyXG4gICAgICAgIE5neE1hdGVyaWFsVGltZXBpY2tlclBlcmlvZENvbXBvbmVudCxcclxuICAgICAgICBTdHlsZVNhbml0aXplclBpcGUsXHJcbiAgICAgICAgVGltZUZvcm1hdHRlclBpcGUsXHJcbiAgICAgICAgVGltZXBpY2tlckRpcmVjdGl2ZSxcclxuICAgICAgICBPdmVybGF5RGlyZWN0aXZlLFxyXG4gICAgICAgIE5neE1hdGVyaWFsVGltZXBpY2tlclRvZ2dsZUljb25EaXJlY3RpdmUsXHJcbiAgICAgICAgQXV0b2ZvY3VzRGlyZWN0aXZlLFxyXG4gICAgICAgIE1pbnV0ZXNGb3JtYXR0ZXJQaXBlXHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hNYXRlcmlhbFRpbWVwaWNrZXJNb2R1bGUge1xyXG4gICAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmdNb2R1bGU6IE5neE1hdGVyaWFsVGltZXBpY2tlck1vZHVsZSxcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbTmd4TWF0ZXJpYWxUaW1lcGlja2VyU2VydmljZSwgTmd4TWF0ZXJpYWxUaW1lcGlja2VyRXZlbnRTZXJ2aWNlXVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuIl19